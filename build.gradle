plugins {
    id 'java'
    id 'distribution'
    id "org.openjfx.javafxplugin" version "0.0.9"
}

group 'com.yoursdearboy.omegat.plugins.browser'
version '1.3.4'

sourceCompatibility = 1.8
def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

ext {
    mainClass = "com.yoursdearboy.omegat.plugins.browser.BrowserPlugin"
}

repositories {
    mavenCentral()
    maven {
        url 'http://dl.bintray.com/omegat-org/maven'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'org.omegat:vldocking:3.0.5'
    compileOnly 'org.omegat:omegat:5.2.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

javafx {
    version = '12'
    modules = [ 'javafx.swing', 'javafx.web']
    configuration = 'compile'
}

jar {
    archiveAppendix = platform
    manifest {
        attributes("OmegaT-Plugins": rootProject.ext.mainClass)
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task copyToOmegaT {
    doLast {
        def VAR_NAME = "OMEGAT_HOME"
        def omegatDir = System.getenv(VAR_NAME)
        if (!omegatDir) omegatDir = System.getProperty(VAR_NAME)
        if (!omegatDir) throw new GradleException("Set $VAR_NAME variable or property")
        copy {
            from file("$buildDir/libs")
            into file("$omegatDir/plugins")
        }
    }
}

distTar {
    compression = Compression.GZIP
    archiveAppendix = platform
}

distZip {
    archiveAppendix = platform
}

artifacts {
    archives jar
}

distributions {
    main {
        contents {
            from(jar)
            from('README.md')
        }
    }
}
